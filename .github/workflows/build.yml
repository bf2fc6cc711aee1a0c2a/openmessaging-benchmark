# This workflow will build a Java project with Maven

name: Build and Unit tests

on:
  push:
    branches:
      - 'master'
      - "[0-9]+.[0-9]+.x"

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.BF2ROBOT_TOKEN}}    
    permissions: 
      contents: read
      packages: write      
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{secrets.BF2ROBOT_TOKEN}}    
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Setup Docker
      uses: docker-practice/actions-setup-docker@v1        
    
    - name: Cache m2 repo
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
        
    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: project      
    
    - name: Build and run Unit tests
      run: |
        /usr/bin/sudo gpasswd -a $USER docker        
        /usr/bin/sudo setfacl -m user:$USER:rw /var/run/docker.sock
        /usr/bin/sudo service docker restart
        mvn --batch-mode install --file pom.xml -Dgithub.token=${{ secrets.GITHUB_TOKEN }} --no-transfer-progress -Dno-format -P docker -Ddocker.repo=${{ secrets.IMAGE_REPO_HOSTNAME }} -Ddocker.organization=${{ secrets.IMAGE_REPO_NAMESPACE }}
        docker login -u="${{ secrets.IMAGE_REPO_USERNAME }}" -p="${{ secrets.IMAGE_REPO_PASSWORD }}" ${{ secrets.IMAGE_REPO_HOSTNAME }}
        docker push ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/openmessaging-benchmark:${{ steps.project.outputs.version }}
        docker tag ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/openmessaging-benchmark:${{ steps.project.outputs.version }} ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/openmessaging-benchmark:latest
        docker push ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/openmessaging-benchmark:latest
