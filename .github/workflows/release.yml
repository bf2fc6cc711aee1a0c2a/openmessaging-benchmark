# This workflow will build a Java project with Maven

name: Release

on:
  pull_request:
    types: [closed]
    paths:
      - '.github/project.yml'    

jobs:
  release:
    name: release
    if: ${{github.event.pull_request.merged == true}}
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write      

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Setup Docker
      uses: docker-practice/actions-setup-docker@v1        
    
    - name: Cache m2 repo
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
        
    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: project      
    
    - name: Build and run Unit tests
      run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          mvn -B release:prepare -DreleaseVersion=${{steps.metadata.outputs.current-version}} -DdevelopmentVersion=${{steps.metadata.outputs.next-version}} -P docker -Ddocker.organization=${{secrets.IMAGE_REPO_HOSTNAME}}
          git checkout ${{github.base_ref}}
          git rebase release
          mvn -B release:perform                
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        
   - name: docker push
     run: |
       docker login -u="${{secrets.IMAGE_REPO_USERNAME}}" -p="${{secrets.IMAGE_REPO_PASSWORD}}" ${{secrets.IMAGE_REPO_HOSTNAME}}
       docker push ${{secrets.IMAGE_REPO_HOSTNAME}}/${{secrets.IMAGE_REPO_NAMESPACE}}/openmessaging-benchmark:${{steps.metadata.outputs.version}}
       
   - name: Push Release Tag
     run: |
       git push
       git push --tags
  
   - name: Create GitHub Release
       uses: radcortez/milestone-release-action@98bd3321583e9bdbbe15c08fa4b2249371efaeaa
       with:
         github-token: ${{secrets.GITHUB_TOKEN}}
         milestone-title: ${{steps.metadata.outputs.current-version}}       

